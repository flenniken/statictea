# $ # StaticTea template for generating the function doc section
# $ # for the readme.
# $ #
# $ # Define replacement patterns that formats the descriptions
# $ # for org mode. Sort the entries by their name.
# $ #
# $ block
# $ : g.patterns = list( +
# $ :   '~~~~', '#+END_SRC', +
# $ :   '~~~', '#+BEGIN_SRC', +
# $ :   '\* ', '- ', +
# $ :   "@@", '', +
# $ :   "@\|", '[', +
# $ :   "\|@", ']', +
# $ :   "[ ]*@:", h.newline, +
# $ :   "&quot;", '"', +
# $ :   "&gt;", '>', +
# $ :   "&lt;", '<', +
# $ :   "&amp;", '&')
# $ : g.entries = sort(s.entries, "ascending", "sensitive", "name")
# $ endblock
# $ #
# $ # Generate the function index.
# $ #
# $ # Show the function entries and skip the others.  Change the
# $ # function names from nim names to StaticTea names, i.e,
# $ # funConcat to concat.  Show the description's first
# $ # sentence.
# $ #
# $ nextline
# $ : t.repeat = len(g.entries)
# $ : entry = get(g.entries, t.row, dict())
# $ : skip = case(entry.type, 1, "skFunc", 0)
# $ : pos = find(entry.name, "fun", -1)
# $ : underscorePos = find(entry.name, "_", len(entry.name))
# $ : skip2 = case(pos, 1, 0, 0)
# $ : t.output = case(add(skip, skip2), "skip", 0, "result")
# $ : capName = case(pos, entry.name, 0, substr(entry.name, 3, underscorePos))
# $ : name = concat(lower(substr(capName, 0, 1)), substr(capName, 1))
# $ : desc = replaceRe(entry.description, g.patterns)
# $ : shortFuncDesc = substr(desc, 0, add(find(desc, '.', -1), 1))
- [[#{entry.name}][{name}()]] -- {shortFuncDesc}
# $ #
# $ # Generate the function sections.
# $ #
# $ block
# $ : t.repeat = len(g.entries)
# $ : entry = get(g.entries, t.row, dict())
# $ : skip = case(entry.type, 1, "skFunc", 0)
# $ : pos = find(entry.name, "fun", -1)
# $ : underscorePos = find(entry.name, "_", len(entry.name))
# $ : skip2 = case(pos, 1, 0, 0)
# $ : t.output = case(add(skip, skip2), "skip", 0, "result")
# $ : capName = case(pos, entry.name, 0, +
# $ :   substr(entry.name, 3, underscorePos))
# $ : name = concat(lower(substr(capName, 0, 1)), substr(capName, 1))
# $ : description = replaceRe(entry.description, g.patterns)

[[#contents][èŒ¶]]

** {name}()
:PROPERTIES:
:CUSTOM_ID: {entry.name}
:END:

{description}
# $ endblock
