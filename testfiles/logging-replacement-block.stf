id stf file version 0.0.0

## Test logging the replacement block.

# file line attributes: noLastEnding command nonZeroReturn

--- file cmd.sh command
$statictearoot/bin/statictea -l=log.txt -t=tmpl.txt -r=result.txt >stdout 2>stderr
--- endfile

# Remove the time prefix from the log lines then extract the template lines.
--- file log.sh command
cat log.txt | cut -c 26- | grep "^tmpl.txt" >log.filtered
--- endfile

--- file tmpl.txt
Log the replacement block.
$$ block t.output = "log"
┌─────────┐
│log block│
└─────────┘
$$ endblock

Log the replacement block containing a variable.
$$ block t.output = "log"
t.output = {t.output}
$$ endblock

Log the replacement block two times.
$$ block t.output = "log"
$$ : t.repeat = 2
t.row = {t.row}
$$ endblock

Log the nextline replacement block.
$$ nextline t.output = "log"
nextline replacement block

Log the replace command's replacement block.
$$ replace t.output = "log"
$$ : t.content = "replace command\n"
not used line
$$ endblock

--- endfile


--- file result.expected
Log the replacement block.

Log the replacement block containing a variable.

Log the replacement block two times.

Log the nextline replacement block.

Log the replace command's replacement block.

--- endfile

--- file stdout.expected
--- endfile

--- file stderr.expected
--- endfile

--- file log.filtered.expected
tmpl.txt(3); ┌─────────┐
tmpl.txt(4); │log block│
tmpl.txt(5); └─────────┘
tmpl.txt(10); t.output = log
tmpl.txt(16); t.row = 0
tmpl.txt(16); t.row = 1
tmpl.txt(21); nextline replacement block
tmpl.txt(26); replace command
--- endfile

--- file log.txt.expected
--- endfile

--- expected result.expected == result.txt
--- expected stdout.expected == stdout
--- expected stderr.expected == stderr
--- expected log.filtered.expected == log.filtered
#-- expected log.txt.expected == log.txt
