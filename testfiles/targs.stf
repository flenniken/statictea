id stf file version 0.0.0

## Test t.args with normal arguments.

file cmd.sh command
$statictearoot/bin/statictea -l -s=server.json -j=shared.json \
  -s=server2.json -j=shared2.json \
  -p='abc$,def' -p='$$' \
  -t=template.html -r=result.html >stdout 2>stderr
endfile

---file---template.html---
t.args keys:

$$ nextline g.keys = keys(t.args)
{g.keys}

t.args keys:

$$ nextline
$$ : t.repeat = len(g.keys)
$$ : num = add(t.row, 1)
$$ : key = get(g.keys, t.row)
  {num}: {key}

t.args:

$$ nextline
{t.args}

t.args:

$$ nextline t.repeat = len(g.keys)
$$ : key = get(g.keys, t.row)
$$ : value = get(t.args, key)
{key}: {value}

## : prepostList:

$$ block t.repeat = len(t.args.serverList)
$$ : g.serverParts &= concat("--server=", get(t.args.serverList, t.row))
$$ endblock
$$ block t.repeat = len(t.args.serverList)
$$ : g.sharedParts &= concat("--server=", get(t.args.sharedList, t.row))
$$ endblock
$$ block t.repeat = len(t.args.templateList)
$$ : g.templateParts &= concat("--server=", get(t.args.templateList, t.row))
$$ endblock
$$ block t.repeat = len(t.args.prepostList)
$$ : prepost = get(t.args.prepostList, t.row)
$$ : prefix = get(prepost, 0)
$$ : postfix = get(prepost, 1)
$$ : g.prepostParts &= concat("--prepost='", prefix, "','", postfix, "'")
$$ endblock

$$ nextline
$$ : parts &= "statictea"
$$ : parts &= if(t.args.help, " --help", "")
$$ : parts &= if(t.args.version, " --version", "")
$$ : parts &= if(t.args.update, " --update", "")
$$ : parts &= if(t.args.log, " --log", "")
$$ :
$$ : parts &= if(cmp(len(t.args.resultFilename), 0), +
$$ :   concat(" --result=", t.args.resultFilename), "")
$$ :
$$ : parts &= if(cmp(len(t.args.logFilename), 0), +
$$ :   concat(" --log=", t.args.logFilename), "")
$$ :
$$ : parts = join(g.serverParts, " ")
$$ : parts = join(g.sharedParts, " ")
$$ : parts = join(g.templateParts, " ")
$$ : parts = join(g.prepostParts, " ")
$$ : cmd = join(parts)
{cmd}
----------------endfile---


file server.json
{}
endfile

file shared.json
{}
endfile

file server2.json
{}
endfile

file shared2.json
{}
endfile

--- file result.expected
--- endfile

--- file stdout.expected
--- endfile

--- file stderr.expected
--- endfile

--- expected result.expected == result.html
--- expected stdout.expected == stdout
--- expected stderr.expected == stderr
