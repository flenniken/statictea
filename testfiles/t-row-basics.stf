id stf file version 0.0.0

## Text the t.row variable.

--- file cmd.sh command
$statictea \
  -l=log.txt \
  -s=server.json \
  -t=tmpl.txt \
  -r=result.html >stdout 2>stderr
--- endfile


# Run a command over the log file that removes the time prefix then
# extracts the lines generates by template commands ignoring the lines
# generated by the system.
--- file log.sh command
cat log.txt | cut -c 26- | grep "^tmpl.txt" >log.filtered | true
--- endfile

--- file tmpl.txt
The readme example.

  Here is an example using the row variable.  In the example the
  row is used in three places.

<ul>
<!--$ nextline t.repeat=len(s.companies)-->
<!--$ : company = get(s.companies, t.row) -->
<!--$ : num = add(t.row, 1) -->
  <li id="r{t.row}">{num}. {company}</li>
</ul>
--- endfile

--- file server.json
{
  "companies": [
    "Mighty Leaf Tea",
    "Numi Organic Tea",
    "Peet's Coffee & Tea",
    "Red Diamond"
  ]
}
--- endfile

--- file shared.json
{
  "name": "shared",
  "type": "json"
}
--- endfile

--- file result.expected
The readme example.

  Here is an example using the row variable.  In the example the
  row is used in three places.

<ul>
  <li id="r0">1. Mighty Leaf Tea</li>
  <li id="r1">2. Numi Organic Tea</li>
  <li id="r2">3. Peet's Coffee & Tea</li>
  <li id="r3">4. Red Diamond</li>
</ul>
--- endfile

--- file stdout.expected
--- endfile

--- file stderr.expected
--- endfile

--- file log.filtered.expected
--- endfile

--- file log.txt.expected
--- endfile

--- expected result.expected == result.html
--- expected stdout.expected == stdout
--- expected stderr.expected == stderr
--- expected log.filtered.expected == log.filtered
#--- expected log.txt.expected == log.txt
