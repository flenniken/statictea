stf file, version 0.1.0

# t.args

Test t.args with normal arguments.

### File cmd.sh command

~~~
$statictea \
  -l \
  -s server.json \
  -o codefile.tea \
  -s server2.json \
  -o codefile2.tea \
  -p 'abc$,def' -p '$$' \
  -t template.html \
  -r result.html \
  >stdout 2>stderr
~~~

### File template.html

~~~
$statictea -l -s server.json -o codefile.tea \
  -s server2.json -o codefile2.tea \
  -p 'abc$,def' -p '$$' \
  -t template.html -r result.html >stdout 2>stderr

t.args keys and values:
$$ nextline
$$ : keys = keys(t.args)
$$ : t.repeat = len(keys)
$$ : key = get(keys, t.row)
$$ : value = get(t.args, key)
  {key}: {value}

Command line from t.args:

$$ block t.repeat = len(t.args.serverList)
$$ : g.serverParts &= join([" --server ", get(t.args.serverList, t.row)])
$$ endblock
$$ block t.repeat = len(t.args.codeList)
$$ : g.codeFileParts &= join([" --code ", get(t.args.codeList, t.row)])
$$ endblock
$$ block
$$ : g.templateParts &= join([" --template ", t.args.templateFilename])
$$ endblock
$$ block t.repeat = len(t.args.prepostList)
$$ : prepost = get(t.args.prepostList, t.row)
$$ : prefix = prepost[0]
$$ : postfix = prepost[1]
$$ : second = if((postfix == ""), "", format(",{postfix}"))
$$ : part = format(" --prepost '{prefix}{second}'")
$$ : g.prepostParts &= part
$$ endblock
$$ nextline
$$ : parts &= "statictea"
$$ : parts &= if(t.args.help, " --help", "")
$$ : parts &= if(t.args.version, " --version", "")
$$ : parts &= if(t.args.update, " --update", "")
$$ : parts &= if(t.args.log, " --log", "")
$$ : parts &= if(t.args.repl, " --repl", "")
$$ :
$$ : parts &= if((len(t.args.resultFilename) == 0), "", +
$$ :   join([" --result ", t.args.resultFilename]))
$$ :
$$ : parts &= if0(len(t.args.logFilename), "", +
$$ :   join([" --log ", t.args.logFilename]))
$$ :
$$ : parts &= join(g.serverParts)
$$ : parts &= join(g.codeFileParts)
$$ : parts &= join(g.templateParts)
$$ : parts &= join(g.prepostParts)
$$ : cmd = join(parts)
  {cmd}
~~~


### File server.json

~~~
{}
~~~

### File server2.json

~~~
{}
~~~

### File codefile.tea

~~~
~~~

### File codefile2.tea

~~~
~~~

### File result.expected

~~~
$statictea -l -s server.json -o codefile.tea \
  -s server2.json -o codefile2.tea \
  -p 'abc$,def' -p '$$' \
  -t template.html -r result.html >stdout 2>stderr

t.args keys and values:
  help: false
  version: false
  update: false
  log: true
  repl: false
  serverList: ["server.json","server2.json"]
  codeList: ["codefile.tea","codefile2.tea"]
  resultFilename: result.html
  templateFilename: template.html
  logFilename: 
  prepostList: [["abc$","def"],["$$",""]]

Command line from t.args:

  statictea --log --result result.html --server server.json --server server2.json --code codefile.tea --code codefile2.tea --template template.html --prepost 'abc$,def' --prepost '$$'
~~~

### Expected result.html == result.expected
### Expected stdout == empty
### Expected stderr == empty
