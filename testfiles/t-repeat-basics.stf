id stf file version 0.0.0

## Test the t.repeat variable.

# Here are the file line attributes:
#   noLastEnding command nonZeroReturn

--- file cmd.sh command
$statictea \
  -l=log.txt \
  -s=server.json \
  -s=server2.json \
  -t=tmpl.txt \
  -r=result.html >stdout 2>stderr
--- endfile

# Run a command over the log file that removes the time prefix then
# extracts the lines generates by template commands ignoring the lines
# generated by the system.
--- file log.sh command
cat log.txt | cut -c 26- | grep "^tmpl.txt" >log.filtered | true
--- endfile

# The following commented out line can be used to remove the time and
# filename prefix from the log lines. Use it in place of the other
# log.sh command.
# cat log.txt | sed 's/^.*); //' >log.filtered

--- file tmpl.txt
Set repeat to 0 on a block command.
$$ block t.repeat = 0
Block that is skipped since repeat is 0.
$$ endblock

Set repeat to 0 on a nextline command.
$$ nextline t.repeat = 0
Block that is skipped since repeat is 0.

Repeat is not set by default.
$$ nextline exists = if1(exists(t, "repeat"), "exists", "does not exist")
t.repeat = {exists}

Blocks repeat one time by default.
$$ nextline line = add(t.row, 1)
{line}

Repeat 1 time.
$$ nextline t.repeat = 1
$$ : line = add(t.row, 1)
{line}
after

Repeat 2 times.
$$ nextline t.repeat = 2
$$ : line = add(t.row, 1)
{line}
after

The readme first repeat example:

  For the following example, the number of items in teaList is
  assigned to the t.repeat variable which outputs the block five
  times.

<!--$ nextline t.repeat = len(s.teaList) -->
<!--$ : tea = get(s.teaList, t.row) -->
 * {tea}

The readme second repeat example:

  The following example builds an html select list of tea companies
  with the Twinings company selected and it shows how to access
  values from dictionaries.

<h3>Tea Companies</h3>
<select>
<!--$ block t.repeat=len(s.companyList) -->
<!--$ : d = get(s.companyList, t.row) -->
<!--$ : selected = get(d, "selected", 0) -->
<!--$ : current = if1(selected, " selected=\"selected\"", "") -->
  <option{current}>{d.company}</option>
$$ endblock
</select>

The readme third repeat example:

  When you view the following template fragment in a browser it
  shows one item in the list.

<h3>Tea</h3>
<ul>
<!--$ nextline t.repeat = len(s.teaList)-->
<!--$ : tea = get(s.teaList, t.row) -->
  <li>{tea}</li>
</ul>

The readme forth repeat example:

  To create a static page that has more products for better testing
  you could create a test list of teas using t.repeat of 0, that appear
  when testing but not when generating the final result. In the
  following example the test list will show: {tea}, Chamomile,
  Chrysanthemum, White, and Puer.

<h3>Tea</h3>
<ul>
<!--$ nextline t.repeat = len(s.teaList) -->
<!--$ : tea = get(s.teaList, t.row) -->
  <li>{tea}</li>
<!--$ block t.repeat = 0 -->
  <li>Chamomile</li>
  <li>Chrysanthemum</li>
  <li>White</li>
  <li>Puer</li>
<!--$ endblock -->
</ul>
--- endfile


--- file server.json
{
"teaList": [
  "Black",
  "Green",
  "Oolong",
  "Sencha",
  "Herbal"
]
}
--- endfile

--- file server2.json
{
"companyList": [
  {"company": "Lipton"},
  {"company": "Tetley"},
  {"company": "Twinings", "selected": 1},
  {"company": "American Tea Room"},
  {"company": "Argo Tea"},
  {"company": "Bigelow Tea Company"}
]
}
--- endfile


--- file result.expected
Set repeat to 0 on a block command.

Set repeat to 0 on a nextline command.

Repeat is not set by default.
t.repeat = does not exist

Blocks repeat one time by default.
1

Repeat 1 time.
1
after

Repeat 2 times.
1
2
after

The readme first repeat example:

  For the following example, the number of items in teaList is
  assigned to the t.repeat variable which outputs the block five
  times.

 * Black
 * Green
 * Oolong
 * Sencha
 * Herbal

The readme second repeat example:

  The following example builds an html select list of tea companies
  with the Twinings company selected and it shows how to access
  values from dictionaries.

<h3>Tea Companies</h3>
<select>
  <option>Lipton</option>
  <option>Tetley</option>
  <option selected="selected">Twinings</option>
  <option>American Tea Room</option>
  <option>Argo Tea</option>
  <option>Bigelow Tea Company</option>
</select>

The readme third repeat example:

  When you view the following template fragment in a browser it
  shows one item in the list.

<h3>Tea</h3>
<ul>
  <li>Black</li>
  <li>Green</li>
  <li>Oolong</li>
  <li>Sencha</li>
  <li>Herbal</li>
</ul>

The readme forth repeat example:

  To create a static page that has more products for better testing
  you could create a test list of teas using t.repeat of 0, that appear
  when testing but not when generating the final result. In the
  following example the test list will show: {tea}, Chamomile,
  Chrysanthemum, White, and Puer.

<h3>Tea</h3>
<ul>
  <li>Black</li>
  <li>Green</li>
  <li>Oolong</li>
  <li>Sencha</li>
  <li>Herbal</li>
</ul>
--- endfile

--- file stdout.expected
--- endfile

--- file stderr.expected
--- endfile

--- file log.filtered.expected
--- endfile

--- file log.txt.expected
--- endfile

--- expected stdout.expected == stdout
--- expected stderr.expected == stderr
--- expected log.filtered.expected == log.filtered
#--- expected log.txt.expected == log.txt
--- expected result.expected == result.html
